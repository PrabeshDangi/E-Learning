// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//User model
model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  name          String?
  password      String
  picture       String
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  enrollments   Enrollment[]
  passwordReset PasswordReset?
}

enum Role {
  USER
  SUPERADMIN
}

model Course {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  category    Category     @relation(fields: [categoryId], references: [id])
  categoryId  Int
  level       Level
  popularity  Int          @default(0)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  enrollments Enrollment[]
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  courses Course[]
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

model Enrollment {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  createdAt DateTime @default(now())
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}
